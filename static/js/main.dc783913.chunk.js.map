{"version":3,"sources":["components/SearchBox.jsx","components/Card.jsx","components/CardList.jsx","components/layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeHolder","searchChange","className","type","onChange","placeholder","Card","monster","src","id","alt","name","email","CardList","monsters","map","Layout","children","App","state","filtered","value","target","setState","Axios","get","then","data","this","filteredData","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAIe,SAASA,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC3C,OACI,uBACIC,UAAU,SACVC,KAAK,SACLC,SAAUH,EACVI,YAAaL,I,MCNV,SAASM,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAC1B,OACI,sBAAKL,UAAU,iBAAf,UACI,qBAAKM,IAAG,+BAA0BD,EAAQE,IAAMC,IAAI,QACpD,4BAAIH,EAAQI,OACZ,4BAAIJ,EAAQK,W,MCHT,SAASC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAC/B,OACI,qBAAKZ,UAAU,YAAf,SACKY,EAASC,KAAI,SAACR,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQE,S,MCNd,SAASO,EAAT,GAA6B,IAAZC,EAAW,EAAXA,SAC5B,OACI,gCACI,2CACC,8BAAMA,O,UCqCJC,E,4MAnCbC,MAAQ,CACNL,SAAU,GACVM,SAAU,I,EAQZnB,aAAe,YAA4B,IAAfoB,EAAc,EAAxBC,OAAUD,MAC1B,EAAKE,SAAS,CAAEH,SAAUC,K,kEANP,IAAD,OAClBG,IAAMC,IAAI,8CAA8CC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC9D,EAAKJ,SAAS,CAAET,SAAUa,S,+BAMpB,IAEN1B,EAEE2B,KAFF3B,aAFK,EAIH2B,KADFT,MAASL,EAHJ,EAGIA,SAAUM,EAHd,EAGcA,SAEfS,EAAef,EAASgB,QAAO,qBAAGnB,KACjCoB,cAAcC,SAASZ,EAASW,kBAEvC,OACE,qBAAK7B,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEF,YAAY,iBACZC,aAAcA,IAEhB,cAAC,EAAD,CAAUa,SAAUe,a,GA7BZI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc783913.chunk.js","sourcesContent":["import React from 'react'\n\nimport './SearchBox.css'\n\nexport default function SearchBox({placeHolder,searchChange}) {\n    return (\n        <input \n            className='search'\n            type='search'\n            onChange={searchChange} \n            placeholder={placeHolder}\n        />\n    )\n}\n","import React from 'react'\n\nimport './Card.css'\n\nexport default function Card({monster}) {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${monster.id}`} alt=\"img\"/>\n            <p>{monster.name}</p>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport Card from './Card'\n\nimport './CardList.css'\n\nexport default function CardList({ monsters}) {\n    return (\n        <div className=\"card-list\">\n            {monsters.map((monster) => (\n          <Card key={monster.id} monster={monster}></Card>\n        ))}\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './Layout.css';\n\nexport default function Layout({children}) {\n    return (\n        <div>\n            <h1> MonsterS</h1>\n             <div>{children}</div>\n        </div>\n    )\n}\n","import { Component } from \"react\";\nimport Axios from \"axios\";\n\nimport SearchBox from \"./components/SearchBox\";\nimport CardList from \"./components/CardList\";\nimport Layout from \"./components/layout/Layout.jsx\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    filtered: \"\",\n  };\n\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then(({ data }) => {\n      this.setState({ monsters: data });\n    });\n  }\n  searchChange = ({ target: { value } }) => {\n    this.setState({ filtered: value });\n  };\n  render() {\n    const {\n      searchChange,\n      state: { monsters, filtered },\n    } = this;\n    const filteredData = monsters.filter(({ name }) =>\n      name.toLowerCase().includes(filtered.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <Layout>\n          <SearchBox\n            placeHolder=\"search monster\"\n            searchChange={searchChange}\n          ></SearchBox>\n          <CardList monsters={filteredData}></CardList>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}